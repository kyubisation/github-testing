name: Continuous Integration Secure
# Secure execution of continuous integration jobs
# which are performed upon completion of the
# "Continuous Integration" workflow
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
on:
  workflow_run:
    workflows: ['Continuous Integration']
    types: [completed]

permissions:
  deployments: write
  packages: write
  pull-requests: write
  
env:
  GH_TOKEN: ${{ github.token }}
  PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0] != null && github.event.workflow_run.pull_requests[0].number || '' }}

jobs:
  codecov:
    runs-on: ubuntu-latest    
    steps:
      - run: echo "${{ toJSON(github) }}"
      - uses: actions/github-script@v6
        with:
          script: |
            console.log(context)

  visual-regression:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    permissions:
      checks: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/check-runs \
            -f "name=Visual Regression Check" \
            -f "head_sha=${{ github.event.workflow_run.head_sha }}" \
            -f "status=in_progress" \
            -f "details_url=https://example.com/$PR_NUMBER" \
            -f "output[title]=Visual Regression Check" \
            -f "output[summary]=https://example.com/$PR_NUMBER" \
            -f "output[text]=test
          qwer"

      - run: gh pr checks $PR_NUMBER

      - name: Create Visual Regression Check
        id: tag-name
        if: false
        uses: actions/github-script@v7
        with:
          script: |
            const payload = { owner: context.repo.owner, repo: context.repo.repo };
            const { data: deployment } = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.payload.workflow_run.head_sha,
              name: 'Visual Regression Check',
              details_url: `https://lyne-visual-diff-pr${process.env.PR_NUMBER}.app.sbb.ch`,
              status: 'in_progress',
            });

            return 'available';
          result-encoding: string
  